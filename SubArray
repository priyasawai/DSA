// Subarray:
class HelloWorld {
    public static void main(String[] args) {
    int []arr={1,2,3,4};
    int n=arr.length;
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            for(int k=i;k<=j;k++)
            System.out.print(arr[k]);
        }
    }
    }
}

//array sum:complexity n2
class HelloWorld {
    public static void main(String[] args) {
    int []arr={-5,4,6,-3,4,-1};
    int n=arr.length;
    int maxSum=0;
    for(int i=0;i<n;i++)
    {
        int sum=0;
        for(int j=i;j<n;j++)
        {
            sum +=arr[j];
        }
        if(sum>maxSum)
        {
            maxSum=sum;
        }
    }
    System.out.println(maxSum);
    }
}

//maximum sum in contigeneous array
kadanes algo:o(n)
class HelloWorld {
    public static void main(String[] args) {
    int []arr={5,-4,-2,6,-1};
    int n=arr.length;
    int currSum=0;
    int maxSum=0;
    for(int i=0;i<n;i++)
    {
        currSum +=arr[i];
    
    if(currSum>maxSum)
    {
        maxSum=currSum;
      }
      
      if(currSum<0)
      {
          currSum=0;
      }
     }
      System.out.println(maxSum);
    }
}

//find indexes of subarraySum:
class HelloWorld {
    public static void maxSumSubarrayindex(int []arr,int n)
    {
        int s=0,start=0,end=0;
        int currSum=0;
    int maxSum=0;
    for(int i=0;i<n;i++)
    {
        currSum +=arr[i];
    
    if(currSum>maxSum)
    {
        maxSum=currSum;
        start=s;
        end=i;
      }
      
      if(currSum<0)
      {
          currSum=0;
          s=i+1;
      }
     }
      System.out.println("starting index "+start +" \n");
      System.out.println("starting index " +end);
    }
    public static void main(String[] args) {
    int arr[] = { -2, -3, 4, -1, -2, 1, 5, -3 };
    int n=arr.length;
    maxSumSubarrayindex(arr,n);
    }
}

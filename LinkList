class SinglyLinkedList {
    Node head;
    class Node
    {
        int data;
        Node next;
        
        Node(int d)
        {
            data=d;
            this.next=null;
        }
    }
    
    public void insertFirst(int value)
    {
        Node newNode=new Node(value);
        if(head==null)
        {
            head=newNode;
            return;
        }
        newNode.next=head;
        head=newNode;
    }
    
    public void insertLast(int value)
    {
        Node newNode=new Node(value);
        Node temp=head;
        while(temp.next!=null)
        {
            temp=temp.next;
        }
        temp.next=newNode;
    }
    
    public void deleteFirst()
    {
        Node temp=head;
        head=head.next;
        temp.next=null;
    }
    
    public void deleteLast()
    {
        if(head==null || head.next==null)
        {
            head=null;
            return;
        }
        Node secondNode=head;
        Node LastNode=head.next;
        while(LastNode.next!=null)
        {
            secondNode=secondNode.next;
            LastNode=LastNode.next;
        }
        secondNode.next=null;
    }
    
    public void position(int pos,int value)
    {
        Node newNode=new Node(value);
        if(pos==1)
        {
            newNode.next=head;
            head=newNode;
        }
        else{
        Node temp=head;
        int count=1;
        while(count<pos-1)
        {
          temp=temp.next; 
          count++;
        }
        Node curr=temp.next;
        newNode.next=curr;
        temp.next=newNode;
    }
    }
    
    public int length()
    {
        if(head==null)
        {
            return 0;
        }
        int count=0;
        Node curr=head;
        while(curr!=null)
        {
            count++;
            curr=curr.next;
        }
        return count;
    }
    public void print()
    {
       if(head==null)
       {
           System.out.println("list is empty");
       }
       Node temp=head;
       while(temp!=null)
       {
         System.out.print(temp.data+"=>"); 
         temp=temp.next;
       }
       System.out.println("Null");
    }
    public static void main(String[] args) {
      SinglyLinkedList ll=new SinglyLinkedList();
      ll.insertFirst(78);
      ll.insertFirst(56);
      ll.insertLast(74);
      //ll.print();
     // ll.deleteFirst();
      //ll.print();
      ll.insertLast(34);
      ll.insertLast(35);
      ll.print();
      //ll.deleteLast();
      //ll.print();
      ll.position(3,90);
      ll.print();
      ll.position(5,80);
      ll.print();
      System.out.println(ll.length());
    }
}
